{"version":3,"sources":["components/welcome.js","components/login.js","components/resetPassword.js","components/create.js","App.js","utils/decompress.js","utils/compress.js","containers/container.js","actions/index.js","reducers/reducer.js","index.js"],"names":["onCreate","this","props","welcomePage","createUser","Welcome","state","email","password","passwordMissMatch","userExists","user","className","onClick","call","Component","Login","handleChange","event","setState","target","id","value","handleSubmit","data","users","find","userId","forEach","login","preventDefault","length","forgot","onSubmit","Group","controlId","bssize","Control","placeholder","autoFocus","onChange","type","block","disabled","validateForm","forgotPassword","ResetPassword","reset","enterUser","notUser","setUser","bind","setPassword","findUser","confirmPassword","cancelReset","resetPassword","_id","$oid","updateUserUrl","axios","put","canGetCloudUsers","React","Create","admin","addUser","cancel","found","post","console","log","error","message","addNewUser","IMAGES_API","USERS_API","fetchImages","get","then","list","images","getImages","fetchUsers","fetch","res","json","getUsers","deleteImage","a","url","delete","imageDeleted","map","image","decompressed","compressed","i","w","result","k","dictionary","entry","dictSize","String","fromCharCode","charAt","decompressData","imageUrl","key","src","alt","canDeleteImages","uploadImage","uploadingImage","imageFile","getLogoutButton","loggedIn","logout","getDeleteWindowButton","deleteWindowOpen","App","prevProps","prevState","snapshot","getNewImages","imageIsDeleted","canGetUsers","files","handleImageUpload","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","onerror","toBase64","uncompressed","c","wc","hasOwnProperty","push","compressData","welcome","getLoginPage","onDrop","onImageDrop","accept","multiple","getRootProps","getInputProps","imageUploading","getGalleryStateData","connect","dispatch","actions","defaultState","reducers","action","editEnabled","filter","store","createStore","combineReducers","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e004c24a.chunk.js","sourcesContent":["/* eslint-disable */\r\nimport React, { Component } from \"react\";\r\n\r\nfunction onCreate() {\r\n    this.props.welcomePage(false)\r\n    this.props.createUser(true)\r\n}\r\nexport default class Welcome extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n            passwordMissMatch: \"\",\r\n            userExists: \"\",\r\n            user: {}\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"centered\">\r\n                        <div className=\"welcome\">\r\n                            WELCOME\r\n                        </div>\r\n                        <div className=\"header\">\r\n                            Login to Photo Cloud Gallery\r\n                        </div>\r\n                <button className=\"button\" onClick={()=>this.props.welcomePage(false)}>\r\n                    login\r\n                </button>\r\n                <button className=\"button\" onClick={()=>onCreate.call(this)}>\r\n                    create\r\n                </button>\r\n                    </section>\r\n        );\r\n    }\r\n}\r\n","/* eslint-disable */\r\nimport React, { Component } from \"react\";\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nexport default class Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n            passwordMissMatch: \"\",\r\n            userExists: \"\",\r\n            user: {}\r\n        };\r\n    }\r\n\r\n    validateForm() {\r\n        return this.state.email.length > 0 && this.state.password.length > 0;\r\n    }\r\n    handleReset() {\r\n        this.props.forgot(true);\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            [event.target.id]: event.target.value,\r\n            passwordMissMatch: \"\",\r\n            userExists: \"\"\r\n        });\r\n    };\r\n\r\n    handleSubmit = event => {\r\n        const userExists = this.props.data.users.find((user) => {\r\n            return user.userId === this.state.email\r\n        });\r\n        if (userExists) {\r\n            this.props.data.users.forEach((user) => {\r\n                if(user.userId === this.state.email) {\r\n                    if(user.password === this.state.password) {\r\n                        this.props.login(user);\r\n                    }else {\r\n                        this.setState({\r\n                            passwordMissMatch: true\r\n                        })\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        if (!userExists) {\r\n            this.setState({\r\n                userExists: false\r\n            })\r\n        }\r\n        event.preventDefault();\r\n    };\r\n\r\n    render() {\r\n            return (\r\n                <div>\r\n                <section className=\"centered\">\r\n                    {this.state.userExists === false &&\r\n                    <div className=\"error\">\r\n                        user does not exists\r\n                    </div>}\r\n                    {this.state.passwordMissMatch === true &&\r\n                    <div className=\"error\">\r\n                        user and password miss match\r\n                    </div>}\r\n                    <div className=\"Login\">\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <Form.Group controlId=\"email\" bssize=\"large\">\r\n                                <Form.Control\r\n                                    placeholder=\"userId\"\r\n                                    className=\"input\"\r\n                                    autoFocus\r\n                                    value={this.state.email}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"password\" bssize=\"large\">\r\n                                <Form.Control\r\n                                    placeholder=\"password\"\r\n                                    className=\"input\"\r\n                                    value={this.state.password}\r\n                                    onChange={this.handleChange}\r\n                                    type=\"password\"\r\n                                />\r\n                            </Form.Group>\r\n                            <Button\r\n                                block\r\n                                bssize=\"large\"\r\n                                className=\"button\"\r\n                                disabled={!this.validateForm()}\r\n                                type=\"submit\"\r\n                            >\r\n                                Login\r\n                            </Button>\r\n                            <Button className=\"button\" onClick={()=>this.props.forgotPassword(true)}>\r\n                                reset\r\n                            </Button>\r\n                            <Button className=\"button\" onClick={()=>this.props.welcomePage(true)}>\r\n                                cancel\r\n                            </Button>\r\n                        </Form>\r\n                    </div>\r\n                </section>\r\n                </div>\r\n            );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport '../App.css'\r\nimport axios from \"axios\";\r\n\r\nexport default class ResetPassword extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: \"\",\r\n            userExists: false,\r\n            reset: false,\r\n            password: \"\",\r\n            enterUser: true,\r\n            notUser: false,\r\n            id: \"\"\r\n        };\r\n        this.setUser = this.setUser.bind(this);\r\n        this.setPassword = this.setPassword.bind(this);\r\n        this.findUser = this.findUser.bind(this);\r\n        this.confirmPassword = this.confirmPassword.bind(this);\r\n        this.cancelReset = this.cancelReset.bind(this);\r\n        this.resetPassword = this.resetPassword.bind(this);\r\n    }\r\n\r\n    setUser(event) {\r\n        if(event.target.value.length) {\r\n            this.setState({\r\n                user: event.target.value,\r\n                notUser: false\r\n            });\r\n        }\r\n    }\r\n    findUser() {\r\n        this.props.data.users.forEach((user)=>{\r\n            if(user.userId === this.state.user) {\r\n                this.setState({\r\n                    userExists: true,\r\n                    enterUser: false,\r\n                    id: user._id.$oid\r\n                })\r\n            }\r\n            if(!(user.userId === this.state.user)) {\r\n                this.setState({\r\n                    notUser: true\r\n                })\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    cancelReset() {\r\n        this.setState({\r\n            user: \"\",\r\n            userExists: false,\r\n            reset: false,\r\n            password: \"\",\r\n            enterUser: true,\r\n            notUser: false,\r\n            id: \"\"\r\n        });\r\n        this.props.forgotPassword(false);\r\n    }\r\n\r\n    setPassword(event) {\r\n        this.setState({\r\n            password: event.target.value\r\n        });\r\n    }\r\n\r\n    confirmPassword(event) {\r\n        if(this.state.password === event.target.value) {\r\n            this.setState({\r\n                reset: true\r\n            })\r\n        }\r\n\r\n    }\r\n    async resetPassword() {\r\n        const updateUserUrl = `https://api.mlab.com/api/1/databases/users/collections/photo-cloud-users/${this.state.id}?apiKey=kIOuLscCmhbeSOoBEtJUYPV6vy1TMIaQ`\r\n        if(this.state.reset && this.state.id.length > 0) {\r\n            await axios.put(updateUserUrl,{userId: this.state.user, password: this.state.password});\r\n            this.setState({\r\n                userExists: false,\r\n                reset: false,\r\n            });\r\n            this.props.forgotPassword(false);\r\n            this.props.canGetCloudUsers();\r\n        }\r\n    }\r\n    render() {\r\n            return (\r\n                <div>\r\n                    <section className=\"centered\">\r\n                        {this.state.enterUser &&\r\n                        <div className=\"centered\">\r\n                            <h3 className=\"info\">Please enter userId</h3>\r\n                            {this.state.notUser &&\r\n                            <h3 className=\"error\">\r\n                                Can not find the user\r\n                            </h3>\r\n                            }\r\n                            <input placeholder=\"userId\" className=\"input\" onChange={this.setUser}/>\r\n                            <button className=\"button\" onClick={this.findUser}>Next</button>\r\n                            <button className=\"button\" onClick={this.cancelReset}>Cancel</button>\r\n\r\n                        </div>\r\n                        }\r\n                        {this.state.userExists &&\r\n                        <div className=\"centered\">\r\n                            <h3 className=\"info\">Please enter password</h3>\r\n                            <input placeholder=\"password\" className=\"input\" onChange={this.setPassword}/>\r\n                            <h3 className=\"info\">Please re-enter password</h3>\r\n                            <input placeholder=\"confirm password\" className=\"input\" onChange={this.confirmPassword}/>\r\n                            <button className=\"button\" onClick={this.resetPassword}>Reset</button>\r\n                            <button className=\"button\" onClick={this.cancelReset}>Cancel</button>\r\n                        </div>\r\n                        }\r\n                    </section>\r\n                </div>\r\n            );\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport '../App.css'\r\nimport axios from \"axios\";\r\n\r\nexport default class Create extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: \"\",\r\n            admin: \"\",\r\n            password: \"\",\r\n            userExists: false\r\n        };\r\n        this.setUser = this.setUser.bind(this);\r\n        this.setPassword = this.setPassword.bind(this);\r\n        this.addUser = this.addUser.bind(this);\r\n        this.cancel = this.cancel.bind(this);\r\n\r\n    }\r\n\r\n    setUser(event) {\r\n        if(event.target.value.length) {\r\n            const found = this.props.data.users.find((user)=>{\r\n                return user.userId === event.target.value\r\n            });\r\n            if(found) {\r\n                this.setState({\r\n                    userExists: true\r\n                })\r\n            }\r\n            if(!found) {\r\n                this.setState({\r\n                    userExists: false\r\n                })\r\n            }\r\n            this.setState({\r\n                user: event.target.value\r\n            });\r\n        }\r\n    }\r\n\r\n    cancel() {\r\n        this.setState({\r\n            user: \"\",\r\n            userExists: false,\r\n            password: \"\",\r\n            admin: \"\",\r\n        });\r\n        this.props.createUser(false);\r\n    }\r\n\r\n    setPassword(event) {\r\n        this.setState({\r\n            password: event.target.value\r\n        });\r\n    }\r\n    async addNewUser() {\r\n        if(!this.state.userExists) {\r\n            const addUserUrl = 'https://api.mlab.com/api/1/databases/users/collections/photo-cloud-users?apiKey=kIOuLscCmhbeSOoBEtJUYPV6vy1TMIaQ';\r\n            try {\r\n                await axios.post(addUserUrl, {\r\n                    userId: this.state.user,\r\n                    password: this.state.password\r\n                });\r\n                this.props.createUser(false);\r\n                this.props.welcomePage(true);\r\n            } catch (e) {\r\n                console.log(e.error.message)\r\n            }\r\n        }\r\n    }\r\n\r\n    async addUser() {\r\n        const found = this.props.data.users.find((user)=>{\r\n            return user.userId === this.state.user\r\n            });\r\n        if(found) {\r\n            this.setState({\r\n                userExists: true\r\n            })\r\n        }\r\n        if(!found) {\r\n            this.setState({\r\n                userExists: false\r\n            })\r\n            await this.addNewUser();\r\n        }\r\n    }\r\n    render() {\r\n        function addUserDisabled() {\r\n            return this.state.userExists === true || !this.state.user.length || !this.state.password.length;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <section className=\"centered\">\r\n                    <div className=\"centered\">\r\n                        <h3 className=\"info\">Please enter userId</h3>\r\n                        {this.state.userExists &&\r\n                        <h3 className=\"error\">user name already taken</h3>\r\n                        }\r\n                        <input placeholder=\"userId\" className=\"input\" onChange={this.setUser}/>\r\n                        <h3 className=\"info\">Please enter password</h3>\r\n                        <input placeholder=\"password\" className=\"input\" onChange={this.setPassword}/>\r\n                        <button className=\"button\" disabled={addUserDisabled.call(this)} onClick={this.addUser}>Add User</button>\r\n                        <button className=\"button\" onClick={this.cancel}>Cancel</button>\r\n\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport Dropzone from 'react-dropzone';\r\nimport axios from 'axios';\r\nimport './App.css'\r\nimport Welcome from './components/welcome'\r\nimport Login from './components/login'\r\nimport ResetPassword from './components/resetPassword'\r\nimport compressData from './utils/compress'\r\nimport decompressData from './utils/decompress'\r\nimport Create from \"./components/create\";\r\n\r\nconst IMAGES_API = 'https://api.mlab.com/api/1/databases/images/collections/images?apiKey=kIOuLscCmhbeSOoBEtJUYPV6vy1TMIaQ';\r\nconst USERS_API = 'https://api.mlab.com/api/1/databases/users/collections/photo-cloud-users?apiKey=kIOuLscCmhbeSOoBEtJUYPV6vy1TMIaQ';\r\n\r\nfunction fetchImages() {\r\n    axios.get(IMAGES_API)\r\n        .then(list => {\r\n            this.setState({\r\n                images: list\r\n            });\r\n            this.props.getImages(list);\r\n        });\r\n}\r\n\r\nfunction fetchUsers() {\r\n    fetch(USERS_API)\r\n        .then(res => res.json())\r\n        .then(users => {\r\n            this.props.getUsers(users);\r\n        });\r\n}\r\n\r\nasync function deleteImage(id) {\r\n    const url = `https://api.mlab.com/api/1/databases/images/collections/images/${id}?apiKey=kIOuLscCmhbeSOoBEtJUYPV6vy1TMIaQ`;\r\n    try {\r\n        await axios.delete(url);\r\n        fetchImages.call(this);\r\n        this.props.imageDeleted()\r\n    } catch (e){\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nfunction getImages() {\r\n    return this.props.data.images.map((image) => {\r\n        const decompressed = decompressData(image.imageUrl);\r\n        return <div>\r\n            <img key={image._id.$oid} src={decompressed} alt=\"\" className=\"image\"/>\r\n            {this.props.data.canDeleteImages &&\r\n                <span>\r\n                  <button className=\"delete-button\" onClick={() => deleteImage.call(this, image._id.$oid)}> delete image </button>\r\n                </span>\r\n            }\r\n        </div>\r\n    })\r\n}\r\n\r\nasync function uploadImage() {\r\n    this.props.uploadingImage(true);\r\n    await axios.post(IMAGES_API, {\r\n        userId: this.props.data.user.userId,\r\n        imageUrl: this.state.imageFile\r\n    });\r\n    this.props.uploadImage();\r\n}\r\n\r\nfunction getLogoutButton() {\r\n    if(this.props.data.loggedIn === true) {\r\n        return (\r\n            <button className=\"nav-button\" onClick={this.props.logout}>logout</button>\r\n        );\r\n    }\r\n}\r\n\r\nfunction getDeleteWindowButton() {\r\n    return (\r\n        <div>\r\n            {!this.props.data.canDeleteImages ?\r\n                <button className=\"side-panel-button\" onClick={() => this.props.deleteWindowOpen(true)}> open delete\r\n                    window</button> :\r\n                <button className=\"side-panel-button\" onClick={() => this.props.deleteWindowOpen(false)}> close delete\r\n                    window</button>\r\n            }\r\n        </div>\r\n);\r\n}\r\n\r\nexport default class App extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            imageFile: \"\",\r\n            images: {}\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetchUsers.call(this);\r\n        fetchImages.call(this);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.data.getNewImages || this.props.data.imageIsDeleted) {\r\n            fetchImages.call(this);\r\n        }\r\n        if (this.props.data.canGetUsers) {\r\n            fetchUsers.call(this);\r\n        }\r\n    }\r\n\r\n    onImageDrop(files) {\r\n        this.handleImageUpload(files[0]);\r\n    }\r\n\r\n    handleImageUpload(file) {\r\n        const toBase64 = file => new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = error => reject(error);\r\n        });\r\n\r\n        toBase64(file).then(res => {\r\n            const compressed = compressData(res);\r\n            this.setState({\r\n                imageFile: compressed\r\n        });\r\n        uploadImage.call(this);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <nav className=\"nav-bar\">\r\n                    <h2 className=\"nav-header\">\r\n                        My Photo Cloud\r\n                    </h2>\r\n                    <span className=\"nav-section\">\r\n                        {getLogoutButton.call(this)}\r\n                    </span>\r\n                </nav>\r\n                <div className=\"images\">\r\n                    {this.props.data.welcome &&\r\n                    <Welcome {...this.props}/>\r\n                    }\r\n                    {(!this.props.data.loggedIn && !this.props.data.forgot && this.props.data.getLoginPage) &&\r\n                    <Login {...this.props}/>\r\n                    }\r\n                    {this.props.data.forgot &&\r\n                    <ResetPassword {...this.props}/>\r\n                    }\r\n                    {this.props.data.addUser &&\r\n                    <Create {...this.props}/>\r\n                    }\r\n                </div>\r\n                {this.props.data.loggedIn &&\r\n                <div>\r\n                    <div className=\"split left\">\r\n                        <div>\r\n                            <Dropzone\r\n                                onDrop={this.onImageDrop.bind(this)}\r\n                                accept=\"image/*\"\r\n                                multiple={false}>\r\n                                {({getRootProps, getInputProps}) => {\r\n                                    return (\r\n                                        <div className=\"dropFile\"\r\n                                             {...getRootProps()}\r\n                                        >\r\n                                            <input {...getInputProps()} />\r\n                                            {\r\n                                                <button className=\"upload\">drop file here, or click to upload</button>\r\n                                            }\r\n                                        </div>\r\n                                    )\r\n                                }}\r\n                            </Dropzone>\r\n                            {this.props.data.images.length > 0 && getDeleteWindowButton.call(this)}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"split right\">\r\n                        {this.props.data.imageUploading &&\r\n                        <h1 className=\"uploading\">Uploading......</h1>\r\n                        }\r\n                        <div>\r\n                            {this.props.data.images.length > 0 && getImages.call(this)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","export default function decompressData(compressed) {\n    let i,\n        dictionary = [],\n        w,\n        result,\n        k,\n        entry = \"\",\n        dictSize = 256;\n    for (i = 0; i < 256; i += 1) {\n        dictionary[i] = String.fromCharCode(i);\n    }\n\n    w = String.fromCharCode(compressed[0]);\n    result = w;\n    for (i = 1; i < compressed.length; i += 1) {\n        k = compressed[i];\n        if (dictionary[k]) {\n            entry = dictionary[k];\n        } else {\n            if (k === dictSize) {\n                entry = w + w.charAt(0);\n            } else {\n                return null;\n            }\n        }\n\n        result += entry;\n        dictionary[dictSize++] = w + entry.charAt(0);\n\n        w = entry;\n    }\n    return result;\n}\n","export default function compressData(uncompressed) {\n    const dictionary = {},\n        result = [];\n    let c,\n        wc,\n        w = \"\",\n        dictSize = 256\n    for (let i = 0; i < 256; i += 1) {\n        dictionary[String.fromCharCode(i)] = i;\n    }\n\n    for (let i = 0; i < uncompressed.length; i += 1) {\n        c = uncompressed.charAt(i);\n        wc = w + c;\n        if (dictionary.hasOwnProperty(wc)) {\n            w = wc;\n        } else {\n            result.push(dictionary[w]);\n            dictionary[wc] = dictSize++;\n            w = String(c);\n        }\n    }\n    if (w !== \"\") {\n        result.push(dictionary[w]);\n    }\n    return result;\n}\n","import { connect } from 'react-redux'\r\nimport * as actions from '../actions'\r\nimport App from '../App'\r\nconst getGalleryStateData = (data) => {\r\n    return data;\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        data: getGalleryStateData(state.data)\r\n    }}\r\nconst mapDispatchToProps = dispatch => ({\r\n    getImages: (images) => dispatch(actions.getImages(images)),\r\n    getUsers: (users) => dispatch(actions.getUsers(users)),\r\n    uploadImage: () => dispatch(actions.uploadImage()),\r\n    imageDeleted: () => dispatch(actions.imageDeleted()),\r\n    uploadingImage: (value) => dispatch(actions.uploadingImage(value)),\r\n    logout: () => dispatch(actions.logout()),\r\n    welcomePage: (value) => dispatch(actions.welcomePage(value)),\r\n    login: (user) => dispatch(actions.login(user)),\r\n    forgotPassword: (value) => dispatch(actions.forgotPassword(value)),\r\n    canGetCloudUsers: () => dispatch(actions.canGetCloudUsers()),\r\n    createUser: (value) => dispatch(actions.addUser(value)),\r\n    deleteWindowOpen: (value) => dispatch(actions.deleteWindowOpen(value)),\r\n});\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(App)\r\n","export const getImages = (images) => ({\r\n    type: 'GET_IMAGES',\r\n    images: images\r\n});\r\nexport const getUsers = (users) => ({\r\n    type: 'GET_USERS',\r\n    users: users\r\n});\r\nexport const uploadImage = () => ({\r\n    type: 'UPLOAD_IMAGE'\r\n});\r\nexport const imageDeleted = () => ({\r\n    type: 'DELETE_IMAGE'\r\n});\r\nexport const uploadingImage = (value) => ({\r\n    type: 'UPLOADING_IMAGE',\r\n    value: value\r\n});\r\nexport const login = (user) => ({\r\n    type: 'LOGIN',\r\n    user: user\r\n});\r\nexport const logout = () => ({\r\n    type: 'LOGOUT'\r\n});\r\nexport const welcomePage = (value) => ({\r\n    type: 'GET_LOGIN',\r\n    value: value\r\n});\r\nexport const forgotPassword = (value) => ({\r\n    type: 'FORGOT',\r\n    value: value\r\n});\r\nexport const canGetCloudUsers = () => ({\r\n    type: 'CAN_GET_USERS'\r\n});\r\nexport const addUser = (value) => ({\r\n    type: 'ADD_USER',\r\n    value: value\r\n});\r\nexport const deleteWindowOpen = (value) => ({\r\n    type: 'DELETE_WINDOW',\r\n    value: value\r\n});\r\n\r\n","const defaultState = {\r\n    images: [],\r\n    getNewImages: false,\r\n    imageUploading: false,\r\n    canDeleteImages: false,\r\n    loggedIn: false,\r\n    welcome: true,\r\n    forgot: false,\r\n    getLoginPage: false,\r\n    canGetUsers: true,\r\n    users: [],\r\n    user: {},\r\n    addUser: false,\r\n    imageIsDeleted: false\r\n};\r\n\r\nconst reducers = (state = defaultState, action) => {\r\n    if (action.type === 'LOGIN') {\r\n        return {\r\n            ...state,\r\n            loggedIn: true,\r\n            welcome: false,\r\n            getLoginPage: false,\r\n            user: action.user,\r\n            getNewImages: true\r\n        };\r\n    } else if (action.type === 'LOGOUT') {\r\n        return {\r\n            ...defaultState,\r\n            canGetUsers: true,\r\n        };\r\n    } else if (action.type === 'GET_LOGIN') {\r\n        return {\r\n            ...state,\r\n            getLoginPage: !action.value,\r\n            welcome: action.value,\r\n            canGetUsers: true\r\n        };\r\n    } else if (action.type === 'FORGOT') {\r\n        return {\r\n            ...state,\r\n            forgot: action.value\r\n        };\r\n    } else if (action.type === 'DELETE_WINDOW') {\r\n        return {\r\n            ...state,\r\n            canDeleteImages: action.value\r\n        };\r\n    } else if (action.type === 'CAN_GET_USERS') {\r\n        return {\r\n            ...state,\r\n            canGetUsers: true\r\n        };\r\n    } else if (action.type === 'GET_USERS') {\r\n        return {\r\n            ...state,\r\n            users: action.users,\r\n            canGetUsers: false\r\n        };\r\n    } else if (action.type === 'ADD_USER') {\r\n        if(action.value) {\r\n            return {\r\n                ...state,\r\n                addUser: action.value,\r\n                canGetUsers: true,\r\n                loggedIn: false,\r\n                getLoginPage: false,\r\n                editEnabled: false\r\n            };\r\n        } else {\r\n            return {\r\n                ...state,\r\n                loggedIn: false,\r\n                getLoginPage: false,\r\n                addUser: action.value,\r\n                getNewImages: true\r\n            }\r\n        }\r\n    } else if (action.type === 'GET_IMAGES') {\r\n        return {\r\n            ...state,\r\n            images: action.images.data.filter(image => image.userId === state.user.userId),\r\n            getNewImages: false,\r\n            imageUploading: false,\r\n            imageIsDeleted: false,\r\n        };\r\n    } else if (action.type === 'UPLOAD_IMAGE') {\r\n        return {\r\n            ...state,\r\n            getNewImages: true\r\n        };\r\n    } else if (action.type === 'DELETE_IMAGE') {\r\n        return {\r\n            ...state,\r\n            imageIsDeleted: true,\r\n            canDeleteImages: state.images.length < 0 ? false : state.canDeleteImages\r\n        };\r\n    } else if (action.type === 'UPLOADING_IMAGE') {\r\n        return {\r\n            ...state,\r\n            imageUploading: action.value\r\n        };\r\n    } else {\r\n        return state\r\n    }\r\n    };\r\nexport default reducers\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport {combineReducers, createStore} from 'redux'\r\nimport Container from './containers/container'\r\nimport './index.css';\r\nimport reducers from './reducers/reducer'\r\n\r\nconst store = createStore(combineReducers({\r\n    data: reducers,\r\n}));\r\nReactDOM.render(\r\n    <Provider store={store}><Container /></Provider>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}